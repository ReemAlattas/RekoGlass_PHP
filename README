RekoGlassPHP v1.1: Rekognition API (PHP) for Google Glass
-----------------------------------

RekoGlassPHP is an open-source project which enables developers to write new applications that can integrate computer vision technologies into their Google Glass apps. The RekoGlassPHP v1.0 supports Face Detection, Face Reading, and Scene Understanding.

RekoGlassPHP v1.1 can also be found on Github at https://github.com/orbeus/reko_glass_php; for discussions, there is a forum at http://orbe.us/forum.

Current Version: 1.1

Bug Fix:

- Incompatible with Mirror API v0.6.6 

Configuration:
------------

- Download and configure Google Glass PHP sdk on your server (see https://developers.google.com/glass/quickstart/php). 

  For the people using latest XAMPP, or sqlite3, we provide a new util.php to substitute the original one in MirrorAPI sdk (it only supports sqlite2).

- Register an API key from https://www.rekognition.com/register/, and you will receive API key and secret by email.

- Edit account information in config.php under Path/to/Google/Glass/Project/Rekognition/:
   
  $rekognition_api_key = 'YOUR_API_KEY';
  $rekognition_api_secret = 'YOUR_SECRET';
  
- Setup API callbacks   

  $rekognition_jobs = 'face_part_gender_emotion_age_glass_mouth,scene';
  $rekognition_name_space = '';
  $rekognition_user_id = '';
  
  API classes are separated by ',', and subclasses are separated by '_'. 
  Google Glass does not support face recognition apps at this point, thus leave $rekognition_name_space and $rekognition_user_id empty.
  
- Modified Path/to/Google/Glass/Project/rekognition/Rekognition_API.php and include the base path of rekognition folder:

  $REKOGNITION_ROOT = "Path/to/Google/Glass/Projct/rekognition/folder/";
  require_once $REKOGNITION_ROOT.'config.php';
  require_once $REKOGNITION_ROOT.'Rekognition_Parser.php';
  require_once $REKOGNITION_ROOT.'Rekognition_GUI.php';

- Now check whether Rekognition API has been successfully configured by running our two examples:

  - Analyze image and draw detected faces
  
    http://www.example.com/rekognition/example/Image_Request_Example.php and
    
  - Parse image analysis results (JSON) from Rekognition server
    print out face, e.g, age, smile or not, male or female, with glass or not, etc,
    and scene information, e.g. indoor, beach, etc.
    
    http://www.example.com/rekognition/example/Parser_Example.php

  If your webpage prints out all the information successfully, congratulations! You could use Rekognition API in ANY of your PHP code now.
  
- Call Rekognition API in your Google Glass app:

   - Put /rekognition under the root of your Google Glass project, and edit config.php (Path/to/Google/Glass/Project/config.php) by adding one line on the tail:
     
     $GLOBALS['REKOGNITION_ROOT'] = "rekognition/";

   - When a glass owner shares a photo to your app, Path/to/Google/Glass/Project/notify.php receives the message and sends a notification back.
     To visualize processed results, you need to customize notify.php, take ours sample notify.php for example:
  
     require_once 'rekognition/Rekognition_Google_Glass.php';            // Include Rekognition Google Glass class 
     ...
     $request = json_decode(file_get_contents("php://input"), true);     // Get requests from Glass users
     $image_parser->Reset($request['userToken']);                        // Set user token
     $image_parser->SendFaceNumTimelineItem($request['itemId']);         // Get photo by the id of the shared image, analyze it and post a timeline item to the Glass

     We only provide a visualization example as implemented in SendFaceNumTimelineItem(), which detects the number of faces in the photo and post a message to glass (see details in Path/to/Google/Glass/Project/Rekognition/Rekognition_Google_Glass.php). You could customize the function to get callbacks with different layout/information.
  
